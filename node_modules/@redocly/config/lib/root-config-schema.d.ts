import { AuthProviderType, ApigeeDevOnboardingIntegrationAuthType } from './constants';
export declare const oidcIssuerMetadataSchema: {
    readonly type: "object";
    readonly properties: {
        readonly end_session_endpoint: {
            readonly type: "string";
        };
        readonly token_endpoint: {
            readonly type: "string";
        };
        readonly authorization_endpoint: {
            readonly type: "string";
        };
        readonly jwks_uri: {
            readonly type: "string";
        };
    };
    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
    readonly additionalProperties: true;
};
export declare const oidcProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.OIDC;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly pkce: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly configurationUrl: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly configuration: {
            readonly type: "object";
            readonly properties: {
                readonly end_session_endpoint: {
                    readonly type: "string";
                };
                readonly token_endpoint: {
                    readonly type: "string";
                };
                readonly authorization_endpoint: {
                    readonly type: "string";
                };
                readonly jwks_uri: {
                    readonly type: "string";
                };
            };
            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
            readonly additionalProperties: true;
        };
        readonly clientId: {
            readonly type: "string";
            readonly minLength: 1;
        };
        readonly clientSecret: {
            readonly type: "string";
            readonly minLength: 0;
        };
        readonly teamsClaimName: {
            readonly type: "string";
        };
        readonly teamsClaimMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly scopes: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly tokenExpirationTime: {
            readonly type: "number";
        };
        readonly authorizationRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly tokenRequestCustomParams: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly audience: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly required: readonly ["type", "clientId"];
    readonly oneOf: readonly [{
        readonly required: readonly ["configurationUrl"];
    }, {
        readonly required: readonly ["configuration"];
    }];
    readonly additionalProperties: false;
};
export declare const saml2ProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.SAML2;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly issuerId: {
            readonly type: "string";
        };
        readonly entityId: {
            readonly type: "string";
        };
        readonly ssoUrl: {
            readonly type: "string";
        };
        readonly x509PublicCert: {
            readonly type: "string";
        };
        readonly teamsAttributeName: {
            readonly type: "string";
            readonly default: "https://redocly.com/sso/teams";
        };
        readonly teamsAttributeMap: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly defaultTeams: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
};
export declare const basicAuthProviderConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: AuthProviderType.BASIC;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly credentials: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly username: {
                        readonly type: "string";
                    };
                    readonly password: {
                        readonly type: "string";
                    };
                    readonly passwordHash: {
                        readonly type: "string";
                    };
                    readonly teams: {
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                };
                readonly required: readonly ["username"];
                readonly additionalProperties: false;
            };
        };
    };
    readonly required: readonly ["type", "credentials"];
    readonly additionalProperties: false;
};
export declare const authProviderConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.OIDC;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly pkce: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly configurationUrl: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly configuration: {
                readonly type: "object";
                readonly properties: {
                    readonly end_session_endpoint: {
                        readonly type: "string";
                    };
                    readonly token_endpoint: {
                        readonly type: "string";
                    };
                    readonly authorization_endpoint: {
                        readonly type: "string";
                    };
                    readonly jwks_uri: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                readonly additionalProperties: true;
            };
            readonly clientId: {
                readonly type: "string";
                readonly minLength: 1;
            };
            readonly clientSecret: {
                readonly type: "string";
                readonly minLength: 0;
            };
            readonly teamsClaimName: {
                readonly type: "string";
            };
            readonly teamsClaimMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly scopes: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly tokenExpirationTime: {
                readonly type: "number";
            };
            readonly authorizationRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly tokenRequestCustomParams: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly audience: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly required: readonly ["type", "clientId"];
        readonly oneOf: readonly [{
            readonly required: readonly ["configurationUrl"];
        }, {
            readonly required: readonly ["configuration"];
        }];
        readonly additionalProperties: false;
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.SAML2;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly issuerId: {
                readonly type: "string";
            };
            readonly entityId: {
                readonly type: "string";
            };
            readonly ssoUrl: {
                readonly type: "string";
            };
            readonly x509PublicCert: {
                readonly type: "string";
            };
            readonly teamsAttributeName: {
                readonly type: "string";
                readonly default: "https://redocly.com/sso/teams";
            };
            readonly teamsAttributeMap: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
            readonly defaultTeams: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: AuthProviderType.BASIC;
            };
            readonly title: {
                readonly type: "string";
            };
            readonly credentials: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly username: {
                            readonly type: "string";
                        };
                        readonly password: {
                            readonly type: "string";
                        };
                        readonly passwordHash: {
                            readonly type: "string";
                        };
                        readonly teams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["username"];
                    readonly additionalProperties: false;
                };
            };
        };
        readonly required: readonly ["type", "credentials"];
        readonly additionalProperties: false;
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const ssoOnPremConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly oneOf: readonly [{
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.OIDC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly pkce: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly configurationUrl: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly configuration: {
                    readonly type: "object";
                    readonly properties: {
                        readonly end_session_endpoint: {
                            readonly type: "string";
                        };
                        readonly token_endpoint: {
                            readonly type: "string";
                        };
                        readonly authorization_endpoint: {
                            readonly type: "string";
                        };
                        readonly jwks_uri: {
                            readonly type: "string";
                        };
                    };
                    readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                    readonly additionalProperties: true;
                };
                readonly clientId: {
                    readonly type: "string";
                    readonly minLength: 1;
                };
                readonly clientSecret: {
                    readonly type: "string";
                    readonly minLength: 0;
                };
                readonly teamsClaimName: {
                    readonly type: "string";
                };
                readonly teamsClaimMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly scopes: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly tokenExpirationTime: {
                    readonly type: "number";
                };
                readonly authorizationRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly tokenRequestCustomParams: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly audience: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly required: readonly ["type", "clientId"];
            readonly oneOf: readonly [{
                readonly required: readonly ["configurationUrl"];
            }, {
                readonly required: readonly ["configuration"];
            }];
            readonly additionalProperties: false;
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.SAML2;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly issuerId: {
                    readonly type: "string";
                };
                readonly entityId: {
                    readonly type: "string";
                };
                readonly ssoUrl: {
                    readonly type: "string";
                };
                readonly x509PublicCert: {
                    readonly type: "string";
                };
                readonly teamsAttributeName: {
                    readonly type: "string";
                    readonly default: "https://redocly.com/sso/teams";
                };
                readonly teamsAttributeMap: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly defaultTeams: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
        }, {
            readonly type: "object";
            readonly properties: {
                readonly type: {
                    readonly type: "string";
                    readonly const: AuthProviderType.BASIC;
                };
                readonly title: {
                    readonly type: "string";
                };
                readonly credentials: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly username: {
                                readonly type: "string";
                            };
                            readonly password: {
                                readonly type: "string";
                            };
                            readonly passwordHash: {
                                readonly type: "string";
                            };
                            readonly teams: {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly required: readonly ["username"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly required: readonly ["type", "credentials"];
            readonly additionalProperties: false;
        }];
        readonly discriminator: {
            readonly propertyName: "type";
        };
    };
};
export declare const ssoConfigSchema: {
    readonly oneOf: readonly [{
        readonly type: "array";
        readonly items: {
            readonly type: "string";
            readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
        };
        readonly uniqueItems: true;
    }, {
        readonly type: "string";
        readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
    }];
};
export declare const redirectConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly to: {
            readonly type: "string";
        };
        readonly type: {
            readonly type: "number";
            readonly default: 301;
        };
    };
    readonly additionalProperties: false;
};
export declare const redirectsConfigSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "object";
        readonly properties: {
            readonly to: {
                readonly type: "string";
            };
            readonly type: {
                readonly type: "number";
                readonly default: 301;
            };
        };
        readonly additionalProperties: false;
    };
    readonly default: {};
};
export declare const apiConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly root: {
            readonly type: "string";
        };
        readonly output: {
            readonly type: "string";
            readonly pattern: "(.ya?ml|.json)$";
        };
        readonly rbac: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly openapi: {
                    readonly type: "object";
                    readonly properties: {
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly pagination: {
                            readonly type: "string";
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly navigation: {
                            readonly type: "object";
                            readonly properties: {
                                readonly contentPrefix: {
                                    readonly type: "string";
                                };
                                readonly menuPrefix: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                                readonly initialLoadState: {
                                    readonly type: "string";
                                    readonly enum: readonly ["all-expanded", "default"];
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly type: "number";
                        };
                        readonly sampleMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                    };
                    readonly additionalProperties: false;
                };
            };
            readonly additionalProperties: false;
        };
        readonly title: {
            readonly type: "string";
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
    };
    readonly required: readonly ["root"];
};
export declare const seoConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly title: {
            readonly type: "string";
        };
        readonly description: {
            readonly type: "string";
        };
        readonly siteUrl: {
            readonly type: "string";
        };
        readonly image: {
            readonly type: "string";
        };
        readonly keywords: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            }, {
                readonly type: "string";
            }];
        };
        readonly lang: {
            readonly type: "string";
        };
        readonly jsonLd: {
            readonly type: "object";
        };
        readonly meta: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly name: {
                        readonly type: "string";
                    };
                    readonly content: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["name", "content"];
                readonly additionalProperties: false;
            };
        };
    };
    readonly additionalProperties: false;
};
export declare const rbacScopeItemsSchema: {
    readonly type: "object";
    readonly additionalProperties: {
        readonly type: "string";
    };
};
export declare const rbacConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly teamNamePatterns: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFolders: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly teamFoldersBaseRoles: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly cms: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly reunite: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "string";
            };
        };
        readonly content: {
            readonly type: "object";
            readonly properties: {
                readonly '**': {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
    };
    readonly additionalProperties: {
        readonly type: "object";
        readonly additionalProperties: {
            readonly type: "string";
        };
    };
};
export declare const graviteeAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "GRAVITEE";
        };
        readonly apiBaseUrl: {
            readonly type: "string";
        };
        readonly env: {
            readonly type: "string";
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly auth: {
            readonly type: "object";
            readonly properties: {
                readonly static: {
                    readonly type: "string";
                };
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "apiBaseUrl"];
};
export declare const apigeeAdapterAuthOauth2Schema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
        };
        readonly tokenEndpoint: {
            readonly type: "string";
        };
        readonly clientId: {
            readonly type: "string";
        };
        readonly clientSecret: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
};
export declare const apigeeAdapterAuthServiceAccountSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
        };
        readonly serviceAccountEmail: {
            readonly type: "string";
        };
        readonly serviceAccountPrivateKey: {
            readonly type: "string";
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
};
export declare const apigeeXAdapterConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_X";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const apigeeEdgeAdapterConfigSchema: {
    readonly properties: {
        readonly type: {
            readonly type: "string";
            readonly const: "APIGEE_EDGE";
        };
        readonly apiUrl: {
            readonly type: "string";
        };
        readonly stage: {
            readonly type: "string";
            readonly default: "non-production";
        };
        readonly organizationName: {
            readonly type: "string";
        };
        readonly ignoreApiProducts: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly allowApiProductsOutsideCatalog: {
            readonly type: "boolean";
            readonly default: false;
        };
        readonly auth: {
            readonly type: "object";
            readonly oneOf: readonly [{
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                    };
                    readonly tokenEndpoint: {
                        readonly type: "string";
                    };
                    readonly clientId: {
                        readonly type: "string";
                    };
                    readonly clientSecret: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
            }, {
                readonly type: "object";
                readonly properties: {
                    readonly type: {
                        readonly type: "string";
                        readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                    };
                    readonly serviceAccountEmail: {
                        readonly type: "string";
                    };
                    readonly serviceAccountPrivateKey: {
                        readonly type: "string";
                    };
                };
                readonly additionalProperties: false;
                readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
            }];
            readonly discriminator: {
                readonly propertyName: "type";
            };
        };
    };
    readonly type: "object";
    readonly additionalProperties: false;
    readonly required: readonly ["type", "organizationName", "auth"];
};
export declare const devOnboardingAdapterConfigSchema: {
    readonly type: "object";
    readonly oneOf: readonly [{
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_X";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "APIGEE_EDGE";
            };
            readonly apiUrl: {
                readonly type: "string";
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly organizationName: {
                readonly type: "string";
            };
            readonly ignoreApiProducts: {
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                };
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly auth: {
                readonly type: "object";
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                        };
                        readonly tokenEndpoint: {
                            readonly type: "string";
                        };
                        readonly clientId: {
                            readonly type: "string";
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                        };
                        readonly serviceAccountEmail: {
                            readonly type: "string";
                        };
                        readonly serviceAccountPrivateKey: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly type: "object";
        readonly additionalProperties: false;
        readonly required: readonly ["type", "organizationName", "auth"];
    }, {
        readonly type: "object";
        readonly properties: {
            readonly type: {
                readonly type: "string";
                readonly const: "GRAVITEE";
            };
            readonly apiBaseUrl: {
                readonly type: "string";
            };
            readonly env: {
                readonly type: "string";
            };
            readonly allowApiProductsOutsideCatalog: {
                readonly type: "boolean";
                readonly default: false;
            };
            readonly stage: {
                readonly type: "string";
                readonly default: "non-production";
            };
            readonly auth: {
                readonly type: "object";
                readonly properties: {
                    readonly static: {
                        readonly type: "string";
                    };
                };
            };
        };
        readonly additionalProperties: false;
        readonly required: readonly ["type", "apiBaseUrl"];
    }];
    readonly discriminator: {
        readonly propertyName: "type";
    };
};
export declare const i18ConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly defaultLocale: {
            readonly type: "string";
        };
        readonly locales: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly properties: {
                    readonly code: {
                        readonly type: "string";
                    };
                    readonly name: {
                        readonly type: "string";
                    };
                };
                readonly required: readonly ["code"];
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly ["defaultLocale"];
};
export declare const redoclyConfigSchema: {
    readonly type: "object";
    readonly properties: {
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly requiresLogin: {
            readonly type: "boolean";
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly hideLoading: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableRouter: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: null;
                                        readonly nullable: true;
                                    };
                                    readonly hideReplay: {
                                        readonly type: "boolean";
                                    };
                                    readonly oAuth2RedirectURI: {
                                        readonly type: "string";
                                        readonly nullable: true;
                                    };
                                    readonly corsProxyUrl: {
                                        readonly type: "string";
                                    };
                                    readonly sortRequiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly sanitize: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideDownloadButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadUrls: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly title: {
                                                    readonly type: "string";
                                                };
                                                readonly url: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["url"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly onlyRequiredInSamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly generatedSamplesMaxDepth: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly showExtensions: {
                                        readonly oneOf: readonly [{
                                            readonly type: "boolean";
                                        }, {
                                            readonly type: "string";
                                        }, {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }];
                                    };
                                    readonly hideSchemaTitles: {
                                        readonly type: "boolean";
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly schemasExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly mockServer: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly url: {
                                                readonly type: "string";
                                            };
                                            readonly position: {
                                                readonly enum: readonly ["first", "last", "replace", "off"];
                                            };
                                            readonly description: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly maxDisplayedEnumValues: {
                                        readonly type: "number";
                                    };
                                    readonly schemaDefinitionsTagName: {
                                        readonly type: "string";
                                    };
                                    readonly layout: {
                                        readonly type: "string";
                                        readonly enum: readonly ["stacked", "three-panel"];
                                    };
                                    readonly hideInfoMetadata: {
                                        readonly type: "boolean";
                                    };
                                    readonly events: {
                                        readonly type: "object";
                                    };
                                    readonly skipBundle: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingBasePath: {
                                        readonly type: "string";
                                    };
                                    readonly codeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly lang: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly options: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly indent: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly withImports: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly withComments: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly binary: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly credentials: {
                                                                    readonly type: "string";
                                                                    readonly enum: readonly ["omit", "same-origin", "include"];
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly withOAuth2Call: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                        readonly additionalProperties: false;
                                    };
                                    readonly ignoreNamedSchemas: {
                                        readonly oneOf: readonly [{
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly hidePropertiesPrefix: {
                                        readonly type: "boolean";
                                    };
                                    readonly excludeFromSearch: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly pagination: {
                                        readonly type: "string";
                                        readonly enum: readonly ["none", "section", "item"];
                                    };
                                    readonly navigation: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly contentPrefix: {
                                                readonly type: "string";
                                            };
                                            readonly menuPrefix: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly hidePaginationButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly menu: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly requireExactGroups: {
                                                readonly type: "boolean";
                                            };
                                            readonly groups: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly queries: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly mutations: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly subscriptions: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly types: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly directives: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["name"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly otherItemsGroupName: {
                                                readonly type: "string";
                                            };
                                            readonly initialLoadState: {
                                                readonly type: "string";
                                                readonly enum: readonly ["all-expanded", "default"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                    };
                                    readonly apiLogo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly imageUrl: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly altText: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly sampleMaxInlineArgs: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly fieldExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly baseUrlPath: {
                                        readonly type: "string";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: null;
                                        readonly nullable: true;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "object";
                            }];
                        };
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ssoOnPrem: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly [];
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly hide: {
                                readonly type: "boolean";
                            };
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                        readonly fuzzy: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Previous page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly type: "object";
                    readonly properties: {
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly pagination: {
                            readonly type: "string";
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly navigation: {
                            readonly type: "object";
                            readonly properties: {
                                readonly contentPrefix: {
                                    readonly type: "string";
                                };
                                readonly menuPrefix: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                                readonly initialLoadState: {
                                    readonly type: "string";
                                    readonly enum: readonly ["all-expanded", "default"];
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly type: "number";
                        };
                        readonly sampleMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userMenu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                        readonly hideLoginButton: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                                readonly default: "checkboxes";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
            readonly default: {};
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
    };
    readonly default: {
        readonly redirects: {};
    };
    readonly additionalProperties: true;
};
export declare const rootRedoclyConfigSchema: {
    readonly properties: {
        readonly env: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly additionalProperties: false;
                readonly properties: {
                    metadata: {
                        additionalProperties: true;
                        type: "object";
                    };
                    licenseKey: {
                        type: "string";
                    };
                    redirects: {
                        additionalProperties: {
                            properties: {
                                type: {
                                    type: "number";
                                };
                                to: {
                                    type: "string";
                                };
                            };
                            additionalProperties: false;
                            type: "object";
                        };
                        type: "object";
                    };
                    seo: {
                        properties: {
                            lang: {
                                type: "string";
                            };
                            image: {
                                type: "string";
                            };
                            title: {
                                type: "string";
                            };
                            description: {
                                type: "string";
                            };
                            siteUrl: {
                                type: "string";
                            };
                            keywords: {
                                oneOf: ({
                                    items: {
                                        type: "string";
                                    };
                                    type: "array";
                                } | {
                                    type: "string";
                                })[];
                            };
                            jsonLd: {
                                type: "object";
                            };
                            meta: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        content: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: ("name" | "content")[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                    rbac: {
                        properties: {
                            content: {
                                properties: {
                                    "**": {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: {
                                    additionalProperties: {
                                        type: "string";
                                    };
                                    type: "object";
                                };
                                type: "object";
                            };
                            reunite: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                            teamNamePatterns: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            teamFolders: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            teamFoldersBaseRoles: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                            cms: {
                                additionalProperties: {
                                    type: "string";
                                };
                                type: "object";
                            };
                        };
                        additionalProperties: {
                            additionalProperties: {
                                type: "string";
                            };
                            type: "object";
                        };
                        type: "object";
                    };
                    requiresLogin: {
                        type: "boolean";
                    };
                    responseHeaders: {
                        additionalProperties: {
                            items: {
                                properties: {
                                    name: {
                                        type: "string";
                                    };
                                    value: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: ("name" | "value")[];
                            };
                            type: "array";
                        };
                        type: "object";
                    };
                    mockServer: {
                        properties: {
                            off: {
                                type: "boolean";
                            };
                            description: {
                                type: "string";
                            };
                            position: {
                                enum: ("first" | "last" | "replace" | "off")[];
                                type: "string";
                            };
                            strictExamples: {
                                type: "boolean";
                            };
                            errorIfForcedExampleNotFound: {
                                type: "boolean";
                            };
                        };
                        type: "object";
                    };
                    apis: {
                        additionalProperties: {
                            properties: {
                                title: {
                                    type: "string";
                                };
                                metadata: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                root: {
                                    type: "string";
                                };
                                rbac: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                rules: {
                                    additionalProperties: {
                                        oneOf: ({
                                            type: "string";
                                        } | {
                                            type: "object";
                                        })[];
                                    };
                                    type: "object";
                                };
                                decorators: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                preprocessors: {
                                    additionalProperties: true;
                                    type: "object";
                                };
                                theme: {
                                    properties: {
                                        openapi: {
                                            properties: {
                                                jsonSamplesExpandLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                licenseKey: {
                                                    type: "string";
                                                };
                                                feedback: {
                                                    properties: {
                                                        type: {
                                                            enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                            type: "string";
                                                        };
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                        settings: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    nullable: true;
                                                };
                                                mockServer: {
                                                    properties: {
                                                        url: {
                                                            type: "string";
                                                        };
                                                        description: {
                                                            type: "string";
                                                        };
                                                        position: {
                                                            enum: ("first" | "last" | "replace" | "off")[];
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                hideLoading: {
                                                    type: "boolean";
                                                };
                                                disableRouter: {
                                                    type: "boolean";
                                                };
                                                hideSidebar: {
                                                    type: "boolean";
                                                };
                                                hideReplay: {
                                                    type: "boolean";
                                                };
                                                oAuth2RedirectURI: {
                                                    type: "string";
                                                    nullable: true;
                                                };
                                                corsProxyUrl: {
                                                    type: "string";
                                                };
                                                sortRequiredPropsFirst: {
                                                    type: "boolean";
                                                };
                                                sanitize: {
                                                    type: "boolean";
                                                };
                                                hideDownloadButtons: {
                                                    type: "boolean";
                                                };
                                                downloadUrls: {
                                                    items: {
                                                        properties: {
                                                            url: any;
                                                            title: any;
                                                        };
                                                        additionalProperties: false;
                                                        type: "object";
                                                        required: "url"[];
                                                    };
                                                    type: "array";
                                                };
                                                onlyRequiredInSamples: {
                                                    type: "boolean";
                                                };
                                                generatedSamplesMaxDepth: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                showExtensions: {
                                                    oneOf: ({
                                                        type: "boolean";
                                                    } | {
                                                        type: "string";
                                                    } | {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    })[];
                                                };
                                                hideSchemaTitles: {
                                                    type: "boolean";
                                                };
                                                schemasExpansionLevel: {
                                                    oneOf: ({
                                                        type: "number";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                maxDisplayedEnumValues: {
                                                    type: "number";
                                                };
                                                schemaDefinitionsTagName: {
                                                    type: "string";
                                                };
                                                layout: {
                                                    enum: ("stacked" | "three-panel")[];
                                                    type: "string";
                                                };
                                                hideInfoMetadata: {
                                                    type: "boolean";
                                                };
                                                events: {
                                                    type: "object";
                                                };
                                                skipBundle: {
                                                    type: "boolean";
                                                };
                                                routingBasePath: {
                                                    type: "string";
                                                };
                                                codeSamples: {
                                                    properties: {
                                                        languages: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        skipOptionalParameters: {
                                                            type: "boolean";
                                                        };
                                                        withOAuth2Call: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "languages"[];
                                                };
                                                ignoreNamedSchemas: {
                                                    oneOf: ({
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    } | {
                                                        type: "string";
                                                    })[];
                                                };
                                                hidePropertiesPrefix: {
                                                    type: "boolean";
                                                };
                                                excludeFromSearch: {
                                                    type: "boolean";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        graphql: {
                                            properties: {
                                                pagination: {
                                                    enum: ("none" | "section" | "item")[];
                                                    type: "string";
                                                };
                                                navigation: {
                                                    properties: {
                                                        contentPrefix: {
                                                            type: "string";
                                                        };
                                                        menuPrefix: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                hidePaginationButtons: {
                                                    type: "boolean";
                                                };
                                                menu: {
                                                    properties: {
                                                        requireExactGroups: {
                                                            type: "boolean";
                                                        };
                                                        groups: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        otherItemsGroupName: {
                                                            type: "string";
                                                        };
                                                        initialLoadState: {
                                                            enum: ("all-expanded" | "default")[];
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                };
                                                sidebar: {
                                                    properties: {
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                apiLogo: {
                                                    properties: {
                                                        href: {
                                                            type: "string";
                                                        };
                                                        imageUrl: {
                                                            type: "string";
                                                        };
                                                        altText: {
                                                            type: "string";
                                                        };
                                                        backgroundColor: {
                                                            type: "string";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                jsonSamplesExpandLevel: {
                                                    type: "number";
                                                };
                                                sampleMaxInlineArgs: {
                                                    type: "number";
                                                };
                                                licenseKey: {
                                                    type: "string";
                                                };
                                                fieldExpandLevel: {
                                                    type: "number";
                                                };
                                                baseUrlPath: {
                                                    type: "string";
                                                };
                                                feedback: {
                                                    properties: {
                                                        type: {
                                                            enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                            type: "string";
                                                        };
                                                        hide: {
                                                            type: "boolean";
                                                        };
                                                        settings: {
                                                            properties: any;
                                                            additionalProperties: false;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    nullable: true;
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                };
                                output: {
                                    type: "string";
                                    pattern: "(.ya?ml|.json)$";
                                };
                            };
                            type: "object";
                            required: "root"[];
                        };
                        type: "object";
                    };
                    rules: {
                        additionalProperties: {
                            oneOf: ({
                                type: "string";
                            } | {
                                type: "object";
                            })[];
                        };
                        type: "object";
                    };
                    decorators: {
                        additionalProperties: true;
                        type: "object";
                    };
                    preprocessors: {
                        additionalProperties: true;
                        type: "object";
                    };
                    ssoOnPrem: {
                        additionalProperties: {
                            oneOf: ({
                                properties: {
                                    title: {
                                        type: "string";
                                    };
                                    type: {
                                        const: AuthProviderType.OIDC;
                                        type: "string";
                                    };
                                    clientId: {
                                        type: "string";
                                        minLength: 1;
                                    };
                                    configurationUrl: {
                                        type: "string";
                                        minLength: 1;
                                    };
                                    configuration: {
                                        properties: {
                                            token_endpoint: {
                                                type: "string";
                                            };
                                            authorization_endpoint: {
                                                type: "string";
                                            };
                                            end_session_endpoint: {
                                                type: "string";
                                            };
                                            jwks_uri: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: true;
                                        type: "object";
                                        required: ("token_endpoint" | "authorization_endpoint")[];
                                    };
                                    clientSecret: {
                                        type: "string";
                                        minLength: 0;
                                    };
                                    pkce: {
                                        type: "boolean";
                                    };
                                    teamsClaimName: {
                                        type: "string";
                                    };
                                    teamsClaimMap: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    defaultTeams: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    scopes: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    tokenExpirationTime: {
                                        type: "number";
                                    };
                                    authorizationRequestCustomParams: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    tokenRequestCustomParams: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                    audience: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                oneOf: ({
                                    required: "configurationUrl"[];
                                } | {
                                    required: "configuration"[];
                                })[];
                                type: "object";
                                required: ("type" | "clientId")[];
                            } | {
                                properties: {
                                    title: {
                                        type: "string";
                                    };
                                    type: {
                                        const: AuthProviderType.SAML2;
                                        type: "string";
                                    };
                                    issuerId: {
                                        type: "string";
                                    };
                                    ssoUrl: {
                                        type: "string";
                                    };
                                    x509PublicCert: {
                                        type: "string";
                                    };
                                    defaultTeams: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    entityId: {
                                        type: "string";
                                    };
                                    teamsAttributeName: {
                                        type: "string";
                                    };
                                    teamsAttributeMap: {
                                        additionalProperties: {
                                            type: "string";
                                        };
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: ("type" | "issuerId" | "ssoUrl" | "x509PublicCert")[];
                            } | {
                                properties: {
                                    title: {
                                        type: "string";
                                    };
                                    type: {
                                        const: AuthProviderType.BASIC;
                                        type: "string";
                                    };
                                    credentials: {
                                        items: {
                                            properties: {
                                                username: {
                                                    type: "string";
                                                };
                                                password: {
                                                    type: "string";
                                                };
                                                passwordHash: {
                                                    type: "string";
                                                };
                                                teams: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "username"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                                required: ("type" | "credentials")[];
                            })[];
                            discriminator: {
                                propertyName: "type";
                            };
                        };
                        type: "object";
                    };
                    sso: {
                        oneOf: ({
                            items: {
                                enum: ("REDOCLY" | "CORPORATE" | "GUEST")[];
                                type: "string";
                            };
                            type: "array";
                            uniqueItems: true;
                        } | {
                            enum: ("REDOCLY" | "CORPORATE" | "GUEST")[];
                            type: "string";
                        })[];
                    };
                    residency: {
                        type: "string";
                    };
                    developerOnboarding: {
                        properties: {
                            adapters: {
                                items: {
                                    oneOf: ({
                                        properties: {
                                            type: {
                                                const: "GRAVITEE";
                                                type: "string";
                                            };
                                            apiBaseUrl: {
                                                type: "string";
                                            };
                                            auth: {
                                                properties: {
                                                    static: {
                                                        type: "string";
                                                    };
                                                };
                                                type: "object";
                                            };
                                            env: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "apiBaseUrl")[];
                                    } | {
                                        properties: {
                                            type: {
                                                const: "APIGEE_X";
                                                type: "string";
                                            };
                                            organizationName: {
                                                type: "string";
                                            };
                                            auth: {
                                                oneOf: ({
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            type: "string";
                                                        };
                                                        clientId: {
                                                            type: "string";
                                                        };
                                                        tokenEndpoint: {
                                                            type: "string";
                                                        };
                                                        clientSecret: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "clientId" | "tokenEndpoint" | "clientSecret")[];
                                                } | {
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            type: "string";
                                                        };
                                                        serviceAccountEmail: {
                                                            type: "string";
                                                        };
                                                        serviceAccountPrivateKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "serviceAccountEmail" | "serviceAccountPrivateKey")[];
                                                })[];
                                                type: "object";
                                                discriminator: {
                                                    propertyName: "type";
                                                };
                                            };
                                            apiUrl: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            ignoreApiProducts: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "organizationName" | "auth")[];
                                    } | {
                                        properties: {
                                            type: {
                                                const: "APIGEE_EDGE";
                                                type: "string";
                                            };
                                            organizationName: {
                                                type: "string";
                                            };
                                            auth: {
                                                oneOf: ({
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                                            type: "string";
                                                        };
                                                        clientId: {
                                                            type: "string";
                                                        };
                                                        tokenEndpoint: {
                                                            type: "string";
                                                        };
                                                        clientSecret: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "clientId" | "tokenEndpoint" | "clientSecret")[];
                                                } | {
                                                    properties: {
                                                        type: {
                                                            const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                                            type: "string";
                                                        };
                                                        serviceAccountEmail: {
                                                            type: "string";
                                                        };
                                                        serviceAccountPrivateKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("type" | "serviceAccountEmail" | "serviceAccountPrivateKey")[];
                                                })[];
                                                type: "object";
                                                discriminator: {
                                                    propertyName: "type";
                                                };
                                            };
                                            apiUrl: {
                                                type: "string";
                                            };
                                            stage: {
                                                type: "string";
                                            };
                                            ignoreApiProducts: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            allowApiProductsOutsideCatalog: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: ("type" | "organizationName" | "auth")[];
                                    })[];
                                    type: "object";
                                    discriminator: {
                                        propertyName: "type";
                                    };
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                        required: "adapters"[];
                    };
                    removeAttribution: {
                        type: "boolean";
                    };
                    i18n: {
                        properties: {
                            defaultLocale: {
                                type: "string";
                            };
                            locales: {
                                items: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        code: {
                                            type: "string";
                                        };
                                    };
                                    type: "object";
                                    required: "code"[];
                                };
                                type: "array";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                        required: "defaultLocale"[];
                    };
                    ignore: {
                        items: {
                            type: "string";
                        };
                        type: "array";
                    };
                    theme: {
                        properties: {
                            links: {
                                items: {
                                    properties: {
                                        href: {
                                            type: "string";
                                        };
                                        title: {
                                            type: "string";
                                        };
                                        type: {
                                            type: "string";
                                        };
                                        crossorigin: {
                                            type: "string";
                                        };
                                        fetchpriority: {
                                            type: "string";
                                        };
                                        integrity: {
                                            type: "string";
                                        };
                                        referrerpolicy: {
                                            type: "string";
                                        };
                                        as: {
                                            type: "string";
                                        };
                                        hreflang: {
                                            type: "string";
                                        };
                                        imagesizes: {
                                            type: "string";
                                        };
                                        imagesrcset: {
                                            type: "string";
                                        };
                                        media: {
                                            type: "string";
                                        };
                                        prefetch: {
                                            type: "string";
                                        };
                                        rel: {
                                            type: "string";
                                        };
                                        sizes: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: true;
                                    type: "object";
                                    required: "href"[];
                                };
                                type: "array";
                            };
                            navbar: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                href: {
                                                    type: "string";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                items: {
                                                    items: {
                                                        properties: {
                                                            href: {
                                                                type: "string";
                                                            };
                                                            page: {
                                                                type: "string";
                                                            };
                                                            items: any;
                                                            icon: any;
                                                            label: any;
                                                            separatorLine: any;
                                                            linePosition: any;
                                                            directory: any;
                                                            disconnect: any;
                                                            group: any;
                                                            external: any;
                                                            labelTranslationKey: any;
                                                            groupTranslationKey: any;
                                                            separator: any;
                                                            version: any;
                                                            menuStyle: any;
                                                            expanded: any;
                                                            selectFirstItemOnExpand: any;
                                                            flatten: any;
                                                            linkedSidebars: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    type: "array";
                                                };
                                                icon: {
                                                    oneOf: ({
                                                        type: "string";
                                                    } | {
                                                        properties: {
                                                            srcSet: any;
                                                        };
                                                        type: "object";
                                                        required: "srcSet"[];
                                                    })[];
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                linePosition: {
                                                    enum: ("top" | "bottom")[];
                                                    type: "string";
                                                };
                                                directory: {
                                                    type: "string";
                                                };
                                                disconnect: {
                                                    type: "boolean";
                                                };
                                                group: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                                groupTranslationKey: {
                                                    type: "string";
                                                };
                                                separator: {
                                                    type: "string";
                                                };
                                                version: {
                                                    type: "string";
                                                };
                                                menuStyle: {
                                                    enum: "drilldown"[];
                                                    type: "string";
                                                };
                                                expanded: {
                                                    const: "always";
                                                    type: "string";
                                                };
                                                selectFirstItemOnExpand: {
                                                    type: "boolean";
                                                };
                                                flatten: {
                                                    type: "boolean";
                                                };
                                                linkedSidebars: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            navigation: {
                                properties: {
                                    nextButton: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            text: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    previousButton: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            text: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            sidebar: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    separatorLine: {
                                        type: "boolean";
                                    };
                                    linePosition: {
                                        enum: ("top" | "bottom")[];
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            feedback: {
                                properties: {
                                    type: {
                                        enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                        type: "string";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    settings: {
                                        properties: {
                                            comment: {
                                                properties: {
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    label: {
                                                        type: "string";
                                                    };
                                                    likeLabel: {
                                                        type: "string";
                                                    };
                                                    dislikeLabel: {
                                                        type: "string";
                                                    };
                                                    satisfiedLabel: {
                                                        type: "string";
                                                    };
                                                    neutralLabel: {
                                                        type: "string";
                                                    };
                                                    dissatisfiedLabel: {
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            reasons: {
                                                properties: {
                                                    items: {
                                                        items: {
                                                            type: "string";
                                                        };
                                                        type: "array";
                                                    };
                                                    hide: {
                                                        type: "boolean";
                                                    };
                                                    label: {
                                                        type: "string";
                                                    };
                                                    component: {
                                                        enum: ("radio" | "checkbox")[];
                                                        type: "string";
                                                    };
                                                };
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                            items: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                                minItems: 1;
                                            };
                                            label: {
                                                type: "string";
                                            };
                                            submitText: {
                                                type: "string";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            component: {
                                                enum: ("radio" | "checkbox")[];
                                                type: "string";
                                            };
                                            leftScaleLabel: {
                                                type: "string";
                                            };
                                            rightScaleLabel: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        hide: {
                                            type: "boolean";
                                        };
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            imports: {
                                items: {
                                    type: "string";
                                };
                                type: "array";
                            };
                            logo: {
                                properties: {
                                    image: {
                                        type: "string";
                                    };
                                    srcSet: {
                                        type: "string";
                                    };
                                    altText: {
                                        type: "string";
                                    };
                                    link: {
                                        type: "string";
                                    };
                                    favicon: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            products: {
                                additionalProperties: {
                                    properties: {
                                        name: {
                                            type: "string";
                                        };
                                        folder: {
                                            type: "string";
                                        };
                                        icon: {
                                            type: "string";
                                        };
                                    };
                                    additionalProperties: false;
                                    type: "object";
                                    required: ("name" | "folder")[];
                                };
                                type: "object";
                            };
                            footer: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                href: {
                                                    type: "string";
                                                };
                                                page: {
                                                    type: "string";
                                                };
                                                items: {
                                                    items: {
                                                        properties: {
                                                            href: {
                                                                type: "string";
                                                            };
                                                            page: {
                                                                type: "string";
                                                            };
                                                            items: any;
                                                            icon: any;
                                                            label: any;
                                                            separatorLine: any;
                                                            linePosition: any;
                                                            directory: any;
                                                            disconnect: any;
                                                            group: any;
                                                            external: any;
                                                            labelTranslationKey: any;
                                                            groupTranslationKey: any;
                                                            separator: any;
                                                            version: any;
                                                            menuStyle: any;
                                                            expanded: any;
                                                            selectFirstItemOnExpand: any;
                                                            flatten: any;
                                                            linkedSidebars: any;
                                                        };
                                                        type: "object";
                                                    };
                                                    type: "array";
                                                };
                                                icon: {
                                                    oneOf: ({
                                                        type: "string";
                                                    } | {
                                                        properties: {
                                                            srcSet: any;
                                                        };
                                                        type: "object";
                                                        required: "srcSet"[];
                                                    })[];
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                linePosition: {
                                                    enum: ("top" | "bottom")[];
                                                    type: "string";
                                                };
                                                directory: {
                                                    type: "string";
                                                };
                                                disconnect: {
                                                    type: "boolean";
                                                };
                                                group: {
                                                    type: "string";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                                groupTranslationKey: {
                                                    type: "string";
                                                };
                                                separator: {
                                                    type: "string";
                                                };
                                                version: {
                                                    type: "string";
                                                };
                                                menuStyle: {
                                                    enum: "drilldown"[];
                                                    type: "string";
                                                };
                                                expanded: {
                                                    const: "always";
                                                    type: "string";
                                                };
                                                selectFirstItemOnExpand: {
                                                    type: "boolean";
                                                };
                                                flatten: {
                                                    type: "boolean";
                                                };
                                                linkedSidebars: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    logo: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    copyrightText: {
                                        type: "string";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            scripts: {
                                properties: {
                                    head: {
                                        items: {
                                            properties: {
                                                src: {
                                                    type: "string";
                                                };
                                                type: {
                                                    type: "string";
                                                };
                                                async: {
                                                    type: "boolean";
                                                };
                                                crossorigin: {
                                                    type: "string";
                                                };
                                                defer: {
                                                    type: "boolean";
                                                };
                                                fetchpriority: {
                                                    type: "string";
                                                };
                                                integrity: {
                                                    type: "string";
                                                };
                                                module: {
                                                    type: "boolean";
                                                };
                                                nomodule: {
                                                    type: "boolean";
                                                };
                                                nonce: {
                                                    type: "string";
                                                };
                                                referrerpolicy: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                            required: "src"[];
                                        };
                                        type: "array";
                                    };
                                    body: {
                                        items: {
                                            properties: {
                                                src: {
                                                    type: "string";
                                                };
                                                type: {
                                                    type: "string";
                                                };
                                                async: {
                                                    type: "boolean";
                                                };
                                                crossorigin: {
                                                    type: "string";
                                                };
                                                defer: {
                                                    type: "boolean";
                                                };
                                                fetchpriority: {
                                                    type: "string";
                                                };
                                                integrity: {
                                                    type: "string";
                                                };
                                                module: {
                                                    type: "boolean";
                                                };
                                                nomodule: {
                                                    type: "boolean";
                                                };
                                                nonce: {
                                                    type: "string";
                                                };
                                                referrerpolicy: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                            required: "src"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            search: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    placement: {
                                        type: "string";
                                    };
                                    shortcuts: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    suggestedPages: {
                                        items: {
                                            properties: {
                                                page: {
                                                    type: "string";
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                            };
                                            type: "object";
                                            required: "page"[];
                                        };
                                        type: "array";
                                    };
                                    fuzzy: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            colorMode: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    ignoreDetection: {
                                        type: "boolean";
                                    };
                                    modes: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            codeSnippet: {
                                properties: {
                                    elementFormat: {
                                        type: "string";
                                    };
                                    copy: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    report: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            label: {
                                                type: "string";
                                            };
                                            buttonText: {
                                                type: "string";
                                            };
                                            tooltipText: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    expand: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    collapse: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            markdown: {
                                properties: {
                                    frontMatterKeysToResolve: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    partialsFolders: {
                                        items: {
                                            type: "string";
                                        };
                                        type: "array";
                                    };
                                    lastUpdatedBlock: {
                                        properties: {
                                            format: {
                                                enum: ("timeago" | "iso" | "long" | "short")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            locale: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    toc: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            header: {
                                                type: "string";
                                            };
                                            depth: {
                                                type: "integer";
                                                minimum: 1;
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    editPage: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                            baseUrl: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            openapi: {
                                properties: {
                                    jsonSamplesExpandLevel: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    licenseKey: {
                                        type: "string";
                                    };
                                    feedback: {
                                        properties: {
                                            type: {
                                                enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            settings: {
                                                properties: any;
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        nullable: true;
                                    };
                                    mockServer: {
                                        properties: {
                                            url: {
                                                type: "string";
                                            };
                                            description: {
                                                type: "string";
                                            };
                                            position: {
                                                enum: ("first" | "last" | "replace" | "off")[];
                                            };
                                        };
                                        type: "object";
                                    };
                                    hideLoading: {
                                        type: "boolean";
                                    };
                                    disableRouter: {
                                        type: "boolean";
                                    };
                                    hideSidebar: {
                                        type: "boolean";
                                    };
                                    hideReplay: {
                                        type: "boolean";
                                    };
                                    oAuth2RedirectURI: {
                                        type: "string";
                                        nullable: true;
                                    };
                                    corsProxyUrl: {
                                        type: "string";
                                    };
                                    sortRequiredPropsFirst: {
                                        type: "boolean";
                                    };
                                    sanitize: {
                                        type: "boolean";
                                    };
                                    hideDownloadButtons: {
                                        type: "boolean";
                                    };
                                    downloadUrls: {
                                        items: {
                                            properties: {
                                                url: any;
                                                title: any;
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "url"[];
                                        };
                                        type: "array";
                                    };
                                    onlyRequiredInSamples: {
                                        type: "boolean";
                                    };
                                    generatedSamplesMaxDepth: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    showExtensions: {
                                        oneOf: ({
                                            type: "boolean";
                                        } | {
                                            type: "string";
                                        } | {
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        })[];
                                    };
                                    hideSchemaTitles: {
                                        type: "boolean";
                                    };
                                    schemasExpansionLevel: {
                                        oneOf: ({
                                            type: "number";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    maxDisplayedEnumValues: {
                                        type: "number";
                                    };
                                    schemaDefinitionsTagName: {
                                        type: "string";
                                    };
                                    layout: {
                                        enum: ("stacked" | "three-panel")[];
                                        type: "string";
                                    };
                                    hideInfoMetadata: {
                                        type: "boolean";
                                    };
                                    events: {
                                        type: "object";
                                    };
                                    skipBundle: {
                                        type: "boolean";
                                    };
                                    routingBasePath: {
                                        type: "string";
                                    };
                                    codeSamples: {
                                        properties: {
                                            languages: {
                                                items: any;
                                                type: "array";
                                            };
                                            skipOptionalParameters: {
                                                type: "boolean";
                                            };
                                            withOAuth2Call: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "languages"[];
                                    };
                                    ignoreNamedSchemas: {
                                        oneOf: ({
                                            items: {
                                                type: "string";
                                            };
                                            type: "array";
                                        } | {
                                            type: "string";
                                        })[];
                                    };
                                    hidePropertiesPrefix: {
                                        type: "boolean";
                                    };
                                    excludeFromSearch: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            graphql: {
                                properties: {
                                    pagination: {
                                        enum: ("none" | "section" | "item")[];
                                        type: "string";
                                    };
                                    navigation: {
                                        properties: {
                                            contentPrefix: {
                                                type: "string";
                                            };
                                            menuPrefix: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    hidePaginationButtons: {
                                        type: "boolean";
                                    };
                                    menu: {
                                        properties: {
                                            requireExactGroups: {
                                                type: "boolean";
                                            };
                                            groups: {
                                                items: any;
                                                type: "array";
                                            };
                                            otherItemsGroupName: {
                                                type: "string";
                                            };
                                            initialLoadState: {
                                                enum: ("all-expanded" | "default")[];
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                    };
                                    sidebar: {
                                        properties: {
                                            hide: {
                                                type: "boolean";
                                            };
                                        };
                                        type: "object";
                                    };
                                    apiLogo: {
                                        properties: {
                                            href: {
                                                type: "string";
                                            };
                                            imageUrl: {
                                                type: "string";
                                            };
                                            altText: {
                                                type: "string";
                                            };
                                            backgroundColor: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    jsonSamplesExpandLevel: {
                                        type: "number";
                                    };
                                    sampleMaxInlineArgs: {
                                        type: "number";
                                    };
                                    licenseKey: {
                                        type: "string";
                                    };
                                    fieldExpandLevel: {
                                        type: "number";
                                    };
                                    baseUrlPath: {
                                        type: "string";
                                    };
                                    feedback: {
                                        properties: {
                                            type: {
                                                enum: ("rating" | "sentiment" | "comment" | "reasons" | "mood" | "scale")[];
                                                type: "string";
                                            };
                                            hide: {
                                                type: "boolean";
                                            };
                                            settings: {
                                                properties: any;
                                                additionalProperties: false;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        nullable: true;
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            analytics: {
                                properties: {
                                    adobe: {
                                        properties: {
                                            scriptUrl: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "scriptUrl"[];
                                    };
                                    amplitude: {
                                        properties: {
                                            apiKey: {
                                                type: "string";
                                            };
                                            head: {
                                                type: "boolean";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                            respectDNT: {
                                                type: "boolean";
                                            };
                                            exclude: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            outboundClickEventName: {
                                                type: "string";
                                            };
                                            amplitudeConfig: {
                                                additionalProperties: true;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "apiKey"[];
                                    };
                                    fullstory: {
                                        properties: {
                                            orgId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "orgId"[];
                                    };
                                    heap: {
                                        properties: {
                                            appId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "appId"[];
                                    };
                                    rudderstack: {
                                        properties: {
                                            writeKey: {
                                                type: "string";
                                                minLength: 10;
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            trackPage: {
                                                type: "boolean";
                                            };
                                            dataPlaneUrl: {
                                                type: "string";
                                            };
                                            controlPlaneUrl: {
                                                type: "string";
                                            };
                                            sdkUrl: {
                                                type: "string";
                                            };
                                            loadOptions: {
                                                additionalProperties: true;
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "writeKey"[];
                                    };
                                    segment: {
                                        properties: {
                                            writeKey: {
                                                type: "string";
                                                minLength: 10;
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            trackPage: {
                                                type: "boolean";
                                            };
                                            includeTitleInPageCall: {
                                                type: "boolean";
                                            };
                                            host: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "writeKey"[];
                                    };
                                    gtm: {
                                        properties: {
                                            trackingId: {
                                                type: "string";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            pageViewEventName: {
                                                type: "string";
                                            };
                                            gtmAuth: {
                                                type: "string";
                                            };
                                            gtmPreview: {
                                                type: "string";
                                            };
                                            defaultDataLayer: {};
                                            dataLayerName: {
                                                type: "string";
                                            };
                                            enableWebVitalsTracking: {
                                                type: "boolean";
                                            };
                                            selfHostedOrigin: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "trackingId"[];
                                    };
                                    ga: {
                                        properties: {
                                            trackingId: {
                                                type: "string";
                                            };
                                            head: {
                                                type: "boolean";
                                            };
                                            includeInDevelopment: {
                                                type: "boolean";
                                            };
                                            respectDNT: {
                                                type: "boolean";
                                            };
                                            exclude: {
                                                items: {
                                                    type: "string";
                                                };
                                                type: "array";
                                            };
                                            conversionId: {
                                                type: "string";
                                            };
                                            floodlightId: {
                                                type: "string";
                                            };
                                            optimizeId: {
                                                type: "string";
                                            };
                                            anonymizeIp: {
                                                type: "boolean";
                                            };
                                            cookieExpires: {
                                                type: "number";
                                            };
                                            trackers: {
                                                additionalProperties: {
                                                    properties: {
                                                        trackingId: {
                                                            type: "string";
                                                        };
                                                        includeInDevelopment: {
                                                            type: "boolean";
                                                        };
                                                        exclude: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        conversionId: {
                                                            type: "string";
                                                        };
                                                        floodlightId: {
                                                            type: "string";
                                                        };
                                                        optimizeId: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "trackingId"[];
                                                };
                                                type: "object";
                                            };
                                        };
                                        additionalProperties: false;
                                        type: "object";
                                        required: "trackingId"[];
                                    };
                                };
                                type: "object";
                            };
                            userMenu: {
                                properties: {
                                    items: {
                                        items: {
                                            properties: {
                                                label: {
                                                    type: "string";
                                                };
                                                link: {
                                                    type: "string";
                                                };
                                                separatorLine: {
                                                    type: "boolean";
                                                };
                                                external: {
                                                    type: "boolean";
                                                };
                                            };
                                            additionalProperties: true;
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                    hide: {
                                        type: "boolean";
                                    };
                                    hideLoginButton: {
                                        type: "boolean";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            versionPicker: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    showForUnversioned: {
                                        type: "boolean";
                                    };
                                };
                                type: "object";
                            };
                            breadcrumbs: {
                                properties: {
                                    hide: {
                                        type: "boolean";
                                    };
                                    prefixItems: {
                                        items: {
                                            properties: {
                                                page: {
                                                    type: "string";
                                                };
                                                label: {
                                                    type: "string";
                                                };
                                                labelTranslationKey: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: false;
                                type: "object";
                            };
                            catalog: {
                                patternProperties: {
                                    ".*": {
                                        properties: {
                                            title: {
                                                type: "string";
                                            };
                                            slug: {
                                                type: "string";
                                            };
                                            items: {
                                                items: {
                                                    properties: {
                                                        href: {
                                                            type: "string";
                                                        };
                                                        page: {
                                                            type: "string";
                                                        };
                                                        items: {
                                                            items: {
                                                                properties: {
                                                                    href: {
                                                                        type: "string";
                                                                    };
                                                                    page: {
                                                                        type: "string";
                                                                    };
                                                                    items: any;
                                                                    icon: any;
                                                                    label: any;
                                                                    separatorLine: any;
                                                                    linePosition: any;
                                                                    directory: any;
                                                                    disconnect: any;
                                                                    group: any;
                                                                    external: any;
                                                                    labelTranslationKey: any;
                                                                    groupTranslationKey: any;
                                                                    separator: any;
                                                                    version: any;
                                                                    menuStyle: any;
                                                                    expanded: any;
                                                                    selectFirstItemOnExpand: any;
                                                                    flatten: any;
                                                                    linkedSidebars: any;
                                                                };
                                                                type: "object";
                                                            };
                                                            type: "array";
                                                        };
                                                        icon: {
                                                            oneOf: ({
                                                                type: "string";
                                                            } | {
                                                                properties: {
                                                                    srcSet: any;
                                                                };
                                                                type: "object";
                                                                required: "srcSet"[];
                                                            })[];
                                                        };
                                                        label: {
                                                            type: "string";
                                                        };
                                                        separatorLine: {
                                                            type: "boolean";
                                                        };
                                                        linePosition: {
                                                            enum: ("top" | "bottom")[];
                                                            type: "string";
                                                        };
                                                        directory: {
                                                            type: "string";
                                                        };
                                                        disconnect: {
                                                            type: "boolean";
                                                        };
                                                        group: {
                                                            type: "string";
                                                        };
                                                        external: {
                                                            type: "boolean";
                                                        };
                                                        labelTranslationKey: {
                                                            type: "string";
                                                        };
                                                        groupTranslationKey: {
                                                            type: "string";
                                                        };
                                                        separator: {
                                                            type: "string";
                                                        };
                                                        version: {
                                                            type: "string";
                                                        };
                                                        menuStyle: {
                                                            enum: "drilldown"[];
                                                            type: "string";
                                                        };
                                                        expanded: {
                                                            const: "always";
                                                            type: "string";
                                                        };
                                                        selectFirstItemOnExpand: {
                                                            type: "boolean";
                                                        };
                                                        flatten: {
                                                            type: "boolean";
                                                        };
                                                        linkedSidebars: {
                                                            items: {
                                                                type: "string";
                                                            };
                                                            type: "array";
                                                        };
                                                    };
                                                    type: "object";
                                                };
                                                type: "array";
                                            };
                                            description: {
                                                type: "string";
                                            };
                                            filters: {
                                                items: {
                                                    properties: {
                                                        title: {
                                                            type: "string";
                                                        };
                                                        property: {
                                                            type: "string";
                                                        };
                                                        type: {
                                                            enum: ("select" | "checkboxes" | "date-range")[];
                                                            type: "string";
                                                        };
                                                        options: {
                                                            items: any;
                                                            type: "array";
                                                        };
                                                        titleTranslationKey: {
                                                            type: "string";
                                                        };
                                                        parentFilter: {
                                                            type: "string";
                                                        };
                                                        valuesMapping: {
                                                            additionalProperties: any;
                                                            type: "object";
                                                        };
                                                        missingCategoryName: {
                                                            type: "string";
                                                        };
                                                        missingCategoryNameTranslationKey: {
                                                            type: "string";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: ("title" | "property")[];
                                                };
                                                type: "array";
                                            };
                                            groupByFirstFilter: {
                                                type: "boolean";
                                            };
                                            filterValuesCasing: {
                                                enum: ("sentence" | "original" | "lowercase" | "uppercase")[];
                                                type: "string";
                                            };
                                            requiredPermission: {
                                                type: "string";
                                            };
                                            separateVersions: {
                                                type: "boolean";
                                            };
                                            titleTranslationKey: {
                                                type: "string";
                                            };
                                            descriptionTranslationKey: {
                                                type: "string";
                                            };
                                        };
                                        additionalProperties: true;
                                        type: "object";
                                        required: ("slug" | "items")[];
                                    };
                                };
                                type: "object";
                            };
                            scorecard: {
                                properties: {
                                    ignoreNonCompliant: {
                                        type: "boolean";
                                    };
                                    teamMetadataProperty: {
                                        properties: {
                                            property: {
                                                type: "string";
                                            };
                                            label: {
                                                type: "string";
                                            };
                                        };
                                        type: "object";
                                    };
                                    levels: {
                                        items: {
                                            properties: {
                                                name: {
                                                    type: "string";
                                                };
                                                rules: {
                                                    additionalProperties: {
                                                        oneOf: ({
                                                            type: "string";
                                                        } | {
                                                            type: "object";
                                                        })[];
                                                    };
                                                    type: "object";
                                                };
                                                color: {
                                                    type: "string";
                                                };
                                                extends: {
                                                    items: {
                                                        type: "string";
                                                    };
                                                    type: "array";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "name"[];
                                        };
                                        type: "array";
                                    };
                                    targets: {
                                        items: {
                                            properties: {
                                                where: {
                                                    properties: {
                                                        metadata: {
                                                            additionalProperties: any;
                                                            type: "object";
                                                        };
                                                    };
                                                    additionalProperties: false;
                                                    type: "object";
                                                    required: "metadata"[];
                                                };
                                                minimumLevel: {
                                                    type: "string";
                                                };
                                            };
                                            additionalProperties: false;
                                            type: "object";
                                            required: "where"[];
                                        };
                                        type: "array";
                                    };
                                };
                                additionalProperties: true;
                                type: "object";
                                required: never[];
                            };
                        };
                        additionalProperties: true;
                        type: "object";
                    };
                    reunite: {
                        properties: {
                            ignoreLinkChecker: {
                                type: "boolean";
                            };
                        };
                        additionalProperties: false;
                        type: "object";
                    };
                };
                readonly type: "object";
            };
        };
        readonly licenseKey: {
            readonly type: "string";
        };
        readonly redirects: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly to: {
                        readonly type: "string";
                    };
                    readonly type: {
                        readonly type: "number";
                        readonly default: 301;
                    };
                };
                readonly additionalProperties: false;
            };
            readonly default: {};
        };
        readonly seo: {
            readonly type: "object";
            readonly properties: {
                readonly title: {
                    readonly type: "string";
                };
                readonly description: {
                    readonly type: "string";
                };
                readonly siteUrl: {
                    readonly type: "string";
                };
                readonly image: {
                    readonly type: "string";
                };
                readonly keywords: {
                    readonly oneOf: readonly [{
                        readonly type: "array";
                        readonly items: {
                            readonly type: "string";
                        };
                    }, {
                        readonly type: "string";
                    }];
                };
                readonly lang: {
                    readonly type: "string";
                };
                readonly jsonLd: {
                    readonly type: "object";
                };
                readonly meta: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly content: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["name", "content"];
                        readonly additionalProperties: false;
                    };
                };
            };
            readonly additionalProperties: false;
        };
        readonly rbac: {
            readonly type: "object";
            readonly properties: {
                readonly teamNamePatterns: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFolders: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                };
                readonly teamFoldersBaseRoles: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly cms: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly reunite: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "string";
                    };
                };
                readonly content: {
                    readonly type: "object";
                    readonly properties: {
                        readonly '**': {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly type: "string";
                        };
                    };
                };
            };
            readonly additionalProperties: {
                readonly type: "object";
                readonly additionalProperties: {
                    readonly type: "string";
                };
            };
        };
        readonly requiresLogin: {
            readonly type: "boolean";
        };
        readonly responseHeaders: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "array";
                readonly items: {
                    readonly type: "object";
                    readonly properties: {
                        readonly name: {
                            readonly type: "string";
                        };
                        readonly value: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["name", "value"];
                };
            };
        };
        readonly mockServer: {
            readonly type: "object";
            readonly properties: {
                readonly off: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly position: {
                    readonly type: "string";
                    readonly enum: readonly ["first", "last", "replace", "off"];
                    readonly default: "first";
                };
                readonly strictExamples: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly errorIfForcedExampleNotFound: {
                    readonly type: "boolean";
                    readonly default: false;
                };
                readonly description: {
                    readonly type: "string";
                };
            };
        };
        readonly apis: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly type: "object";
                readonly properties: {
                    readonly root: {
                        readonly type: "string";
                    };
                    readonly output: {
                        readonly type: "string";
                        readonly pattern: "(.ya?ml|.json)$";
                    };
                    readonly rbac: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly theme: {
                        readonly type: "object";
                        readonly properties: {
                            readonly openapi: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly hideLoading: {
                                        readonly type: "boolean";
                                    };
                                    readonly disableRouter: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideSidebar: {
                                        readonly type: "boolean";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: null;
                                        readonly nullable: true;
                                    };
                                    readonly hideReplay: {
                                        readonly type: "boolean";
                                    };
                                    readonly oAuth2RedirectURI: {
                                        readonly type: "string";
                                        readonly nullable: true;
                                    };
                                    readonly corsProxyUrl: {
                                        readonly type: "string";
                                    };
                                    readonly sortRequiredPropsFirst: {
                                        readonly type: "boolean";
                                    };
                                    readonly sanitize: {
                                        readonly type: "boolean";
                                    };
                                    readonly hideDownloadButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly downloadUrls: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly title: {
                                                    readonly type: "string";
                                                };
                                                readonly url: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["url"];
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly onlyRequiredInSamples: {
                                        readonly type: "boolean";
                                    };
                                    readonly generatedSamplesMaxDepth: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly showExtensions: {
                                        readonly oneOf: readonly [{
                                            readonly type: "boolean";
                                        }, {
                                            readonly type: "string";
                                        }, {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }];
                                    };
                                    readonly hideSchemaTitles: {
                                        readonly type: "boolean";
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly schemasExpansionLevel: {
                                        readonly oneOf: readonly [{
                                            readonly type: "number";
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly mockServer: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly url: {
                                                readonly type: "string";
                                            };
                                            readonly position: {
                                                readonly enum: readonly ["first", "last", "replace", "off"];
                                            };
                                            readonly description: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly maxDisplayedEnumValues: {
                                        readonly type: "number";
                                    };
                                    readonly schemaDefinitionsTagName: {
                                        readonly type: "string";
                                    };
                                    readonly layout: {
                                        readonly type: "string";
                                        readonly enum: readonly ["stacked", "three-panel"];
                                    };
                                    readonly hideInfoMetadata: {
                                        readonly type: "boolean";
                                    };
                                    readonly events: {
                                        readonly type: "object";
                                    };
                                    readonly skipBundle: {
                                        readonly type: "boolean";
                                    };
                                    readonly routingBasePath: {
                                        readonly type: "string";
                                    };
                                    readonly codeSamples: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly languages: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly lang: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly options: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly indent: {
                                                                    readonly type: "string";
                                                                };
                                                                readonly withImports: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly withComments: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly binary: {
                                                                    readonly type: "boolean";
                                                                };
                                                                readonly credentials: {
                                                                    readonly type: "string";
                                                                    readonly enum: readonly ["omit", "same-origin", "include"];
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["lang"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly skipOptionalParameters: {
                                                readonly type: "boolean";
                                            };
                                            readonly withOAuth2Call: {
                                                readonly type: "boolean";
                                            };
                                        };
                                        readonly required: readonly ["languages"];
                                        readonly additionalProperties: false;
                                    };
                                    readonly ignoreNamedSchemas: {
                                        readonly oneOf: readonly [{
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        }, {
                                            readonly type: "string";
                                        }];
                                    };
                                    readonly hidePropertiesPrefix: {
                                        readonly type: "boolean";
                                    };
                                    readonly excludeFromSearch: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                            readonly graphql: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly pagination: {
                                        readonly type: "string";
                                        readonly enum: readonly ["none", "section", "item"];
                                    };
                                    readonly navigation: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly contentPrefix: {
                                                readonly type: "string";
                                            };
                                            readonly menuPrefix: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly hidePaginationButtons: {
                                        readonly type: "boolean";
                                    };
                                    readonly menu: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly requireExactGroups: {
                                                readonly type: "boolean";
                                            };
                                            readonly groups: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly name: {
                                                            readonly type: "string";
                                                        };
                                                        readonly items: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly queries: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly mutations: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly subscriptions: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly types: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                        readonly directives: {
                                                            readonly type: "object";
                                                            readonly properties: {
                                                                readonly includeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly excludeByName: {
                                                                    readonly type: "array";
                                                                    readonly items: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                            };
                                                            readonly additionalProperties: false;
                                                        };
                                                    };
                                                    readonly required: readonly ["name"];
                                                    readonly additionalProperties: false;
                                                };
                                            };
                                            readonly otherItemsGroupName: {
                                                readonly type: "string";
                                            };
                                            readonly initialLoadState: {
                                                readonly type: "string";
                                                readonly enum: readonly ["all-expanded", "default"];
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                    readonly sidebar: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                            };
                                        };
                                    };
                                    readonly apiLogo: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly imageUrl: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly altText: {
                                                readonly type: "string";
                                            };
                                            readonly backgroundColor: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly jsonSamplesExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly sampleMaxInlineArgs: {
                                        readonly type: "number";
                                    };
                                    readonly licenseKey: {
                                        readonly type: "string";
                                    };
                                    readonly fieldExpandLevel: {
                                        readonly type: "number";
                                    };
                                    readonly baseUrlPath: {
                                        readonly type: "string";
                                    };
                                    readonly feedback: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly hide: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                                readonly default: "sentiment";
                                            };
                                            readonly settings: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly label: {
                                                        readonly type: "string";
                                                    };
                                                    readonly submitText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly buttonText: {
                                                        readonly type: "string";
                                                    };
                                                    readonly component: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["radio", "checkbox"];
                                                        readonly default: "checkbox";
                                                    };
                                                    readonly items: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                        readonly minItems: 1;
                                                    };
                                                    readonly leftScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly rightScaleLabel: {
                                                        readonly type: "string";
                                                    };
                                                    readonly reasons: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly component: {
                                                                readonly type: "string";
                                                                readonly enum: readonly ["radio", "checkbox"];
                                                                readonly default: "checkbox";
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly items: {
                                                                readonly type: "array";
                                                                readonly items: {
                                                                    readonly type: "string";
                                                                };
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                    readonly comment: {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly hide: {
                                                                readonly type: "boolean";
                                                                readonly default: false;
                                                            };
                                                            readonly label: {
                                                                readonly type: "string";
                                                            };
                                                            readonly likeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dislikeLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly satisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly neutralLabel: {
                                                                readonly type: "string";
                                                            };
                                                            readonly dissatisfiedLabel: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly additionalProperties: false;
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly default: null;
                                        readonly nullable: true;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly additionalProperties: false;
                    };
                    readonly title: {
                        readonly type: "string";
                    };
                    readonly metadata: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly rules: {
                        readonly type: "object";
                        readonly additionalProperties: {
                            readonly oneOf: readonly [{
                                readonly type: "string";
                            }, {
                                readonly type: "object";
                            }];
                        };
                    };
                    readonly decorators: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                    readonly preprocessors: {
                        readonly type: "object";
                        readonly additionalProperties: true;
                    };
                };
                readonly required: readonly ["root"];
            };
        };
        readonly rules: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "string";
                }, {
                    readonly type: "object";
                }];
            };
        };
        readonly decorators: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly preprocessors: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ssoOnPrem: {
            readonly type: "object";
            readonly additionalProperties: {
                readonly oneOf: readonly [{
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.OIDC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly pkce: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly configurationUrl: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly configuration: {
                            readonly type: "object";
                            readonly properties: {
                                readonly end_session_endpoint: {
                                    readonly type: "string";
                                };
                                readonly token_endpoint: {
                                    readonly type: "string";
                                };
                                readonly authorization_endpoint: {
                                    readonly type: "string";
                                };
                                readonly jwks_uri: {
                                    readonly type: "string";
                                };
                            };
                            readonly required: readonly ["token_endpoint", "authorization_endpoint"];
                            readonly additionalProperties: true;
                        };
                        readonly clientId: {
                            readonly type: "string";
                            readonly minLength: 1;
                        };
                        readonly clientSecret: {
                            readonly type: "string";
                            readonly minLength: 0;
                        };
                        readonly teamsClaimName: {
                            readonly type: "string";
                        };
                        readonly teamsClaimMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly scopes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenExpirationTime: {
                            readonly type: "number";
                        };
                        readonly authorizationRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly tokenRequestCustomParams: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly audience: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly required: readonly ["type", "clientId"];
                    readonly oneOf: readonly [{
                        readonly required: readonly ["configurationUrl"];
                    }, {
                        readonly required: readonly ["configuration"];
                    }];
                    readonly additionalProperties: false;
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.SAML2;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly issuerId: {
                            readonly type: "string";
                        };
                        readonly entityId: {
                            readonly type: "string";
                        };
                        readonly ssoUrl: {
                            readonly type: "string";
                        };
                        readonly x509PublicCert: {
                            readonly type: "string";
                        };
                        readonly teamsAttributeName: {
                            readonly type: "string";
                            readonly default: "https://redocly.com/sso/teams";
                        };
                        readonly teamsAttributeMap: {
                            readonly type: "object";
                            readonly additionalProperties: {
                                readonly type: "string";
                            };
                        };
                        readonly defaultTeams: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly required: readonly ["type", "issuerId", "ssoUrl", "x509PublicCert"];
                }, {
                    readonly type: "object";
                    readonly properties: {
                        readonly type: {
                            readonly type: "string";
                            readonly const: AuthProviderType.BASIC;
                        };
                        readonly title: {
                            readonly type: "string";
                        };
                        readonly credentials: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly username: {
                                        readonly type: "string";
                                    };
                                    readonly password: {
                                        readonly type: "string";
                                    };
                                    readonly passwordHash: {
                                        readonly type: "string";
                                    };
                                    readonly teams: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly required: readonly ["username"];
                                readonly additionalProperties: false;
                            };
                        };
                    };
                    readonly required: readonly ["type", "credentials"];
                    readonly additionalProperties: false;
                }];
                readonly discriminator: {
                    readonly propertyName: "type";
                };
            };
        };
        readonly sso: {
            readonly oneOf: readonly [{
                readonly type: "array";
                readonly items: {
                    readonly type: "string";
                    readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
                };
                readonly uniqueItems: true;
            }, {
                readonly type: "string";
                readonly enum: readonly ["REDOCLY", "CORPORATE", "GUEST"];
            }];
        };
        readonly residency: {
            readonly type: "string";
        };
        readonly developerOnboarding: {
            readonly type: "object";
            readonly required: readonly ["adapters"];
            readonly additionalProperties: false;
            readonly properties: {
                readonly adapters: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly oneOf: readonly [{
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_X";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "APIGEE_EDGE";
                                };
                                readonly apiUrl: {
                                    readonly type: "string";
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly organizationName: {
                                    readonly type: "string";
                                };
                                readonly ignoreApiProducts: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly oneOf: readonly [{
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.OAUTH2;
                                            };
                                            readonly tokenEndpoint: {
                                                readonly type: "string";
                                            };
                                            readonly clientId: {
                                                readonly type: "string";
                                            };
                                            readonly clientSecret: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "tokenEndpoint", "clientId", "clientSecret"];
                                    }, {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly const: ApigeeDevOnboardingIntegrationAuthType.SERVICE_ACCOUNT;
                                            };
                                            readonly serviceAccountEmail: {
                                                readonly type: "string";
                                            };
                                            readonly serviceAccountPrivateKey: {
                                                readonly type: "string";
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["type", "serviceAccountEmail", "serviceAccountPrivateKey"];
                                    }];
                                    readonly discriminator: {
                                        readonly propertyName: "type";
                                    };
                                };
                            };
                            readonly type: "object";
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "organizationName", "auth"];
                        }, {
                            readonly type: "object";
                            readonly properties: {
                                readonly type: {
                                    readonly type: "string";
                                    readonly const: "GRAVITEE";
                                };
                                readonly apiBaseUrl: {
                                    readonly type: "string";
                                };
                                readonly env: {
                                    readonly type: "string";
                                };
                                readonly allowApiProductsOutsideCatalog: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly stage: {
                                    readonly type: "string";
                                    readonly default: "non-production";
                                };
                                readonly auth: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly static: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["type", "apiBaseUrl"];
                        }];
                        readonly discriminator: {
                            readonly propertyName: "type";
                        };
                    };
                };
            };
        };
        readonly removeAttribution: {
            readonly type: "boolean";
        };
        readonly i18n: {
            readonly type: "object";
            readonly properties: {
                readonly defaultLocale: {
                    readonly type: "string";
                };
                readonly locales: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly code: {
                                readonly type: "string";
                            };
                            readonly name: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["code"];
                    };
                };
            };
            readonly additionalProperties: false;
            readonly required: readonly ["defaultLocale"];
        };
        readonly metadata: {
            readonly type: "object";
            readonly additionalProperties: true;
        };
        readonly ignore: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly theme: {
            readonly type: "object";
            readonly properties: {
                readonly imports: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "string";
                    };
                    readonly default: readonly [];
                };
                readonly logo: {
                    readonly type: "object";
                    readonly properties: {
                        readonly image: {
                            readonly type: "string";
                        };
                        readonly srcSet: {
                            readonly type: "string";
                        };
                        readonly altText: {
                            readonly type: "string";
                        };
                        readonly link: {
                            readonly type: "string";
                        };
                        readonly favicon: {
                            readonly type: "string";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly navbar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly products: {
                    readonly type: "object";
                    readonly additionalProperties: {
                        readonly type: "object";
                        readonly properties: {
                            readonly name: {
                                readonly type: "string";
                            };
                            readonly icon: {
                                readonly type: "string";
                            };
                            readonly folder: {
                                readonly type: "string";
                            };
                        };
                        readonly additionalProperties: false;
                        readonly required: readonly ["name", "folder"];
                    };
                };
                readonly footer: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly properties: {
                                    readonly items: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly page: {
                                                    readonly type: "string";
                                                };
                                                readonly directory: {
                                                    readonly type: "string";
                                                };
                                                readonly disconnect: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly group: {
                                                    readonly type: "string";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly href: {
                                                    readonly type: "string";
                                                };
                                                readonly external: {
                                                    readonly type: "boolean";
                                                };
                                                readonly labelTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly groupTranslationKey: {
                                                    readonly type: "string";
                                                };
                                                readonly icon: {
                                                    readonly oneOf: readonly [{
                                                        readonly type: "string";
                                                    }, {
                                                        readonly type: "object";
                                                        readonly properties: {
                                                            readonly srcSet: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly required: readonly ["srcSet"];
                                                    }];
                                                };
                                                readonly separator: {
                                                    readonly type: "string";
                                                };
                                                readonly separatorLine: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linePosition: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["top", "bottom"];
                                                    readonly default: "top";
                                                };
                                                readonly version: {
                                                    readonly type: "string";
                                                };
                                                readonly menuStyle: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["drilldown"];
                                                };
                                                readonly expanded: {
                                                    readonly type: "string";
                                                    readonly const: "always";
                                                };
                                                readonly selectFirstItemOnExpand: {
                                                    readonly type: "boolean";
                                                };
                                                readonly flatten: {
                                                    readonly type: "boolean";
                                                };
                                                readonly linkedSidebars: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "object";
                                                        readonly additionalProperties: true;
                                                    };
                                                };
                                            };
                                        };
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly directory: {
                                        readonly type: "string";
                                    };
                                    readonly disconnect: {
                                        readonly type: "boolean";
                                        readonly default: false;
                                    };
                                    readonly group: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly href: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly groupTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly icon: {
                                        readonly oneOf: readonly [{
                                            readonly type: "string";
                                        }, {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly srcSet: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly required: readonly ["srcSet"];
                                        }];
                                    };
                                    readonly separator: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                    readonly linePosition: {
                                        readonly type: "string";
                                        readonly enum: readonly ["top", "bottom"];
                                        readonly default: "top";
                                    };
                                    readonly version: {
                                        readonly type: "string";
                                    };
                                    readonly menuStyle: {
                                        readonly type: "string";
                                        readonly enum: readonly ["drilldown"];
                                    };
                                    readonly expanded: {
                                        readonly type: "string";
                                        readonly const: "always";
                                    };
                                    readonly selectFirstItemOnExpand: {
                                        readonly type: "boolean";
                                    };
                                    readonly flatten: {
                                        readonly type: "boolean";
                                    };
                                    readonly linkedSidebars: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                };
                                readonly type: "object";
                            };
                        };
                        readonly copyrightText: {
                            readonly type: "string";
                        };
                        readonly logo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly sidebar: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly separatorLine: {
                            readonly type: "boolean";
                        };
                        readonly linePosition: {
                            readonly type: "string";
                            readonly enum: readonly ["top", "bottom"];
                            readonly default: "bottom";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly scripts: {
                    readonly type: "object";
                    readonly properties: {
                        readonly head: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                        readonly body: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly src: {
                                        readonly type: "string";
                                    };
                                    readonly async: {
                                        readonly type: "boolean";
                                    };
                                    readonly crossorigin: {
                                        readonly type: "string";
                                    };
                                    readonly defer: {
                                        readonly type: "boolean";
                                    };
                                    readonly fetchpriority: {
                                        readonly type: "string";
                                    };
                                    readonly integrity: {
                                        readonly type: "string";
                                    };
                                    readonly module: {
                                        readonly type: "boolean";
                                    };
                                    readonly nomodule: {
                                        readonly type: "boolean";
                                    };
                                    readonly nonce: {
                                        readonly type: "string";
                                    };
                                    readonly referrerpolicy: {
                                        readonly type: "string";
                                    };
                                    readonly type: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["src"];
                                readonly additionalProperties: true;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly links: {
                    readonly type: "array";
                    readonly items: {
                        readonly type: "object";
                        readonly properties: {
                            readonly href: {
                                readonly type: "string";
                            };
                            readonly as: {
                                readonly type: "string";
                            };
                            readonly crossorigin: {
                                readonly type: "string";
                            };
                            readonly fetchpriority: {
                                readonly type: "string";
                            };
                            readonly hreflang: {
                                readonly type: "string";
                            };
                            readonly imagesizes: {
                                readonly type: "string";
                            };
                            readonly imagesrcset: {
                                readonly type: "string";
                            };
                            readonly integrity: {
                                readonly type: "string";
                            };
                            readonly media: {
                                readonly type: "string";
                            };
                            readonly prefetch: {
                                readonly type: "string";
                            };
                            readonly referrerpolicy: {
                                readonly type: "string";
                            };
                            readonly rel: {
                                readonly type: "string";
                            };
                            readonly sizes: {
                                readonly type: "string";
                            };
                            readonly title: {
                                readonly type: "string";
                            };
                            readonly type: {
                                readonly type: "string";
                            };
                        };
                        readonly required: readonly ["href"];
                        readonly additionalProperties: true;
                    };
                };
                readonly feedback: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly type: {
                            readonly type: "string";
                            readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                            readonly default: "sentiment";
                        };
                        readonly settings: {
                            readonly hide: {
                                readonly type: "boolean";
                            };
                            readonly type: "object";
                            readonly properties: {
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly submitText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly component: {
                                    readonly type: "string";
                                    readonly enum: readonly ["radio", "checkbox"];
                                    readonly default: "checkbox";
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                    readonly minItems: 1;
                                };
                                readonly leftScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly rightScaleLabel: {
                                    readonly type: "string";
                                };
                                readonly reasons: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                                readonly comment: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly hide: {
                                            readonly type: "boolean";
                                            readonly default: false;
                                        };
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly likeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dislikeLabel: {
                                            readonly type: "string";
                                        };
                                        readonly satisfiedLabel: {
                                            readonly type: "string";
                                        };
                                        readonly neutralLabel: {
                                            readonly type: "string";
                                        };
                                        readonly dissatisfiedLabel: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly search: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly placement: {
                            readonly type: "string";
                            readonly default: "navbar";
                        };
                        readonly shortcuts: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["/"];
                        };
                        readonly suggestedPages: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["page"];
                            };
                        };
                        readonly fuzzy: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly colorMode: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly ignoreDetection: {
                            readonly type: "boolean";
                        };
                        readonly modes: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["light", "dark"];
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly navigation: {
                    readonly type: "object";
                    readonly properties: {
                        readonly nextButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Next page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly previousButton: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly text: {
                                    readonly type: "string";
                                    readonly default: "Previous page";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly codeSnippet: {
                    readonly type: "object";
                    readonly properties: {
                        readonly elementFormat: {
                            readonly type: "string";
                            readonly default: "icon";
                        };
                        readonly copy: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly report: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly tooltipText: {
                                    readonly type: "string";
                                };
                                readonly buttonText: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly expand: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                        readonly collapse: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {
                                readonly hide: false;
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly markdown: {
                    readonly type: "object";
                    readonly properties: {
                        readonly frontMatterKeysToResolve: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["image", "links"];
                        };
                        readonly partialsFolders: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "string";
                            };
                            readonly default: readonly ["_partials"];
                        };
                        readonly lastUpdatedBlock: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly format: {
                                    readonly type: "string";
                                    readonly enum: readonly ["timeago", "iso", "long", "short"];
                                    readonly default: "timeago";
                                };
                                readonly locale: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly toc: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly header: {
                                    readonly type: "string";
                                    readonly default: "On this page";
                                };
                                readonly depth: {
                                    readonly type: "integer";
                                    readonly default: 3;
                                    readonly minimum: 1;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                        readonly editPage: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                                readonly baseUrl: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: {};
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly openapi: {
                    readonly type: "object";
                    readonly properties: {
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly hideLoading: {
                            readonly type: "boolean";
                        };
                        readonly disableRouter: {
                            readonly type: "boolean";
                        };
                        readonly hideSidebar: {
                            readonly type: "boolean";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                        readonly hideReplay: {
                            readonly type: "boolean";
                        };
                        readonly oAuth2RedirectURI: {
                            readonly type: "string";
                            readonly nullable: true;
                        };
                        readonly corsProxyUrl: {
                            readonly type: "string";
                        };
                        readonly sortRequiredPropsFirst: {
                            readonly type: "boolean";
                        };
                        readonly sanitize: {
                            readonly type: "boolean";
                        };
                        readonly hideDownloadButtons: {
                            readonly type: "boolean";
                        };
                        readonly downloadUrls: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly title: {
                                        readonly type: "string";
                                    };
                                    readonly url: {
                                        readonly type: "string";
                                    };
                                };
                                readonly required: readonly ["url"];
                                readonly additionalProperties: false;
                            };
                        };
                        readonly onlyRequiredInSamples: {
                            readonly type: "boolean";
                        };
                        readonly generatedSamplesMaxDepth: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly showExtensions: {
                            readonly oneOf: readonly [{
                                readonly type: "boolean";
                            }, {
                                readonly type: "string";
                            }, {
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }];
                        };
                        readonly hideSchemaTitles: {
                            readonly type: "boolean";
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly schemasExpansionLevel: {
                            readonly oneOf: readonly [{
                                readonly type: "number";
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly mockServer: {
                            readonly type: "object";
                            readonly properties: {
                                readonly url: {
                                    readonly type: "string";
                                };
                                readonly position: {
                                    readonly enum: readonly ["first", "last", "replace", "off"];
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly maxDisplayedEnumValues: {
                            readonly type: "number";
                        };
                        readonly schemaDefinitionsTagName: {
                            readonly type: "string";
                        };
                        readonly layout: {
                            readonly type: "string";
                            readonly enum: readonly ["stacked", "three-panel"];
                        };
                        readonly hideInfoMetadata: {
                            readonly type: "boolean";
                        };
                        readonly events: {
                            readonly type: "object";
                        };
                        readonly skipBundle: {
                            readonly type: "boolean";
                        };
                        readonly routingBasePath: {
                            readonly type: "string";
                        };
                        readonly codeSamples: {
                            readonly type: "object";
                            readonly properties: {
                                readonly languages: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly lang: {
                                                readonly type: "string";
                                                readonly enum: readonly ["curl", "JavaScript", "Node.js", "Python", "Java8+Apache", "Java", "C#", "C#+Newtonsoft", "PHP", "Go", "Ruby", "R", "Payload"];
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly indent: {
                                                        readonly type: "string";
                                                    };
                                                    readonly withImports: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly withComments: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly binary: {
                                                        readonly type: "boolean";
                                                    };
                                                    readonly credentials: {
                                                        readonly type: "string";
                                                        readonly enum: readonly ["omit", "same-origin", "include"];
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["lang"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly skipOptionalParameters: {
                                    readonly type: "boolean";
                                };
                                readonly withOAuth2Call: {
                                    readonly type: "boolean";
                                };
                            };
                            readonly required: readonly ["languages"];
                            readonly additionalProperties: false;
                        };
                        readonly ignoreNamedSchemas: {
                            readonly oneOf: readonly [{
                                readonly type: "array";
                                readonly items: {
                                    readonly type: "string";
                                };
                            }, {
                                readonly type: "string";
                            }];
                        };
                        readonly hidePropertiesPrefix: {
                            readonly type: "boolean";
                        };
                        readonly excludeFromSearch: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly graphql: {
                    readonly type: "object";
                    readonly properties: {
                        readonly pagination: {
                            readonly type: "string";
                            readonly enum: readonly ["none", "section", "item"];
                        };
                        readonly navigation: {
                            readonly type: "object";
                            readonly properties: {
                                readonly contentPrefix: {
                                    readonly type: "string";
                                };
                                readonly menuPrefix: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly hidePaginationButtons: {
                            readonly type: "boolean";
                        };
                        readonly menu: {
                            readonly type: "object";
                            readonly properties: {
                                readonly requireExactGroups: {
                                    readonly type: "boolean";
                                };
                                readonly groups: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly name: {
                                                readonly type: "string";
                                            };
                                            readonly items: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly queries: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly mutations: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly subscriptions: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly types: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                            readonly directives: {
                                                readonly type: "object";
                                                readonly properties: {
                                                    readonly includeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly excludeByName: {
                                                        readonly type: "array";
                                                        readonly items: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                };
                                                readonly additionalProperties: false;
                                            };
                                        };
                                        readonly required: readonly ["name"];
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly otherItemsGroupName: {
                                    readonly type: "string";
                                };
                                readonly initialLoadState: {
                                    readonly type: "string";
                                    readonly enum: readonly ["all-expanded", "default"];
                                };
                            };
                            readonly additionalProperties: false;
                        };
                        readonly sidebar: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                };
                            };
                        };
                        readonly apiLogo: {
                            readonly type: "object";
                            readonly properties: {
                                readonly imageUrl: {
                                    readonly type: "string";
                                };
                                readonly href: {
                                    readonly type: "string";
                                };
                                readonly altText: {
                                    readonly type: "string";
                                };
                                readonly backgroundColor: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly jsonSamplesExpandLevel: {
                            readonly type: "number";
                        };
                        readonly sampleMaxInlineArgs: {
                            readonly type: "number";
                        };
                        readonly licenseKey: {
                            readonly type: "string";
                        };
                        readonly fieldExpandLevel: {
                            readonly type: "number";
                        };
                        readonly baseUrlPath: {
                            readonly type: "string";
                        };
                        readonly feedback: {
                            readonly type: "object";
                            readonly properties: {
                                readonly hide: {
                                    readonly type: "boolean";
                                    readonly default: false;
                                };
                                readonly type: {
                                    readonly type: "string";
                                    readonly enum: readonly ["rating", "sentiment", "comment", "reasons", "mood", "scale"];
                                    readonly default: "sentiment";
                                };
                                readonly settings: {
                                    readonly type: "object";
                                    readonly properties: {
                                        readonly label: {
                                            readonly type: "string";
                                        };
                                        readonly submitText: {
                                            readonly type: "string";
                                        };
                                        readonly buttonText: {
                                            readonly type: "string";
                                        };
                                        readonly component: {
                                            readonly type: "string";
                                            readonly enum: readonly ["radio", "checkbox"];
                                            readonly default: "checkbox";
                                        };
                                        readonly items: {
                                            readonly type: "array";
                                            readonly items: {
                                                readonly type: "string";
                                            };
                                            readonly minItems: 1;
                                        };
                                        readonly leftScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly rightScaleLabel: {
                                            readonly type: "string";
                                        };
                                        readonly reasons: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly component: {
                                                    readonly type: "string";
                                                    readonly enum: readonly ["radio", "checkbox"];
                                                    readonly default: "checkbox";
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly items: {
                                                    readonly type: "array";
                                                    readonly items: {
                                                        readonly type: "string";
                                                    };
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                        readonly comment: {
                                            readonly type: "object";
                                            readonly properties: {
                                                readonly hide: {
                                                    readonly type: "boolean";
                                                    readonly default: false;
                                                };
                                                readonly label: {
                                                    readonly type: "string";
                                                };
                                                readonly likeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dislikeLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly satisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly neutralLabel: {
                                                    readonly type: "string";
                                                };
                                                readonly dissatisfiedLabel: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly additionalProperties: false;
                                        };
                                    };
                                    readonly additionalProperties: false;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly default: null;
                            readonly nullable: true;
                        };
                    };
                    readonly additionalProperties: false;
                };
                readonly analytics: {
                    readonly type: "object";
                    readonly properties: {
                        readonly adobe: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly scriptUrl: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["scriptUrl"];
                        };
                        readonly amplitude: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly apiKey: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly outboundClickEventName: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                                readonly amplitudeConfig: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["apiKey"];
                        };
                        readonly fullstory: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly orgId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["orgId"];
                        };
                        readonly heap: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly appId: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["appId"];
                        };
                        readonly rudderstack: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly dataPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly controlPlaneUrl: {
                                    readonly type: "string";
                                };
                                readonly sdkUrl: {
                                    readonly type: "string";
                                };
                                readonly loadOptions: {
                                    readonly type: "object";
                                    readonly additionalProperties: true;
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly segment: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly writeKey: {
                                    readonly type: "string";
                                    readonly minLength: 10;
                                };
                                readonly trackPage: {
                                    readonly type: "boolean";
                                };
                                readonly includeTitleInPageCall: {
                                    readonly type: "boolean";
                                };
                                readonly host: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["writeKey"];
                        };
                        readonly gtm: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly gtmAuth: {
                                    readonly type: "string";
                                };
                                readonly gtmPreview: {
                                    readonly type: "string";
                                };
                                readonly defaultDataLayer: {};
                                readonly dataLayerName: {
                                    readonly type: "string";
                                };
                                readonly enableWebVitalsTracking: {
                                    readonly type: "boolean";
                                };
                                readonly selfHostedOrigin: {
                                    readonly type: "string";
                                };
                                readonly pageViewEventName: {
                                    readonly type: "string";
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                        readonly ga: {
                            readonly type: "object";
                            readonly properties: {
                                readonly includeInDevelopment: {
                                    readonly type: "boolean";
                                };
                                readonly trackingId: {
                                    readonly type: "string";
                                };
                                readonly conversionId: {
                                    readonly type: "string";
                                };
                                readonly floodlightId: {
                                    readonly type: "string";
                                };
                                readonly head: {
                                    readonly type: "boolean";
                                };
                                readonly respectDNT: {
                                    readonly type: "boolean";
                                };
                                readonly exclude: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "string";
                                    };
                                };
                                readonly optimizeId: {
                                    readonly type: "string";
                                };
                                readonly anonymizeIp: {
                                    readonly type: "boolean";
                                };
                                readonly cookieExpires: {
                                    readonly type: "number";
                                };
                                readonly trackers: {
                                    readonly type: "object";
                                    readonly additionalProperties: {
                                        readonly type: "object";
                                        readonly properties: {
                                            readonly includeInDevelopment: {
                                                readonly type: "boolean";
                                            };
                                            readonly trackingId: {
                                                readonly type: "string";
                                            };
                                            readonly conversionId: {
                                                readonly type: "string";
                                            };
                                            readonly floodlightId: {
                                                readonly type: "string";
                                            };
                                            readonly optimizeId: {
                                                readonly type: "string";
                                            };
                                            readonly exclude: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["trackingId"];
                                    };
                                };
                            };
                            readonly additionalProperties: false;
                            readonly required: readonly ["trackingId"];
                        };
                    };
                };
                readonly userMenu: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly items: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly external: {
                                        readonly type: "boolean";
                                    };
                                    readonly link: {
                                        readonly type: "string";
                                    };
                                    readonly separatorLine: {
                                        readonly type: "boolean";
                                    };
                                };
                                readonly additionalProperties: true;
                            };
                            readonly default: readonly [];
                        };
                        readonly hideLoginButton: {
                            readonly type: "boolean";
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly versionPicker: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly showForUnversioned: {
                            readonly type: "boolean";
                        };
                    };
                };
                readonly breadcrumbs: {
                    readonly type: "object";
                    readonly properties: {
                        readonly hide: {
                            readonly type: "boolean";
                        };
                        readonly prefixItems: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly properties: {
                                    readonly label: {
                                        readonly type: "string";
                                    };
                                    readonly labelTranslationKey: {
                                        readonly type: "string";
                                    };
                                    readonly page: {
                                        readonly type: "string";
                                    };
                                };
                                readonly additionalProperties: false;
                                readonly default: {};
                            };
                        };
                    };
                    readonly additionalProperties: false;
                    readonly default: {};
                };
                readonly catalog: {
                    readonly type: "object";
                    readonly patternProperties: {
                        readonly '.*': {
                            readonly type: "object";
                            readonly additionalProperties: true;
                            readonly required: readonly ["slug", "items"];
                            readonly properties: {
                                readonly slug: {
                                    readonly type: "string";
                                };
                                readonly filters: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly type: "object";
                                        readonly additionalProperties: false;
                                        readonly required: readonly ["title", "property"];
                                        readonly properties: {
                                            readonly type: {
                                                readonly type: "string";
                                                readonly enum: readonly ["select", "checkboxes", "date-range"];
                                                readonly default: "checkboxes";
                                            };
                                            readonly title: {
                                                readonly type: "string";
                                            };
                                            readonly titleTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly property: {
                                                readonly type: "string";
                                            };
                                            readonly parentFilter: {
                                                readonly type: "string";
                                            };
                                            readonly valuesMapping: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                            readonly missingCategoryName: {
                                                readonly type: "string";
                                            };
                                            readonly missingCategoryNameTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly options: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                    };
                                };
                                readonly groupByFirstFilter: {
                                    readonly type: "boolean";
                                };
                                readonly filterValuesCasing: {
                                    readonly type: "string";
                                    readonly enum: readonly ["sentence", "original", "lowercase", "uppercase"];
                                };
                                readonly items: {
                                    readonly type: "array";
                                    readonly items: {
                                        readonly properties: {
                                            readonly items: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly page: {
                                                            readonly type: "string";
                                                        };
                                                        readonly directory: {
                                                            readonly type: "string";
                                                        };
                                                        readonly disconnect: {
                                                            readonly type: "boolean";
                                                            readonly default: false;
                                                        };
                                                        readonly group: {
                                                            readonly type: "string";
                                                        };
                                                        readonly label: {
                                                            readonly type: "string";
                                                        };
                                                        readonly href: {
                                                            readonly type: "string";
                                                        };
                                                        readonly external: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly labelTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly groupTranslationKey: {
                                                            readonly type: "string";
                                                        };
                                                        readonly icon: {
                                                            readonly oneOf: readonly [{
                                                                readonly type: "string";
                                                            }, {
                                                                readonly type: "object";
                                                                readonly properties: {
                                                                    readonly srcSet: {
                                                                        readonly type: "string";
                                                                    };
                                                                };
                                                                readonly required: readonly ["srcSet"];
                                                            }];
                                                        };
                                                        readonly separator: {
                                                            readonly type: "string";
                                                        };
                                                        readonly separatorLine: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linePosition: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["top", "bottom"];
                                                            readonly default: "top";
                                                        };
                                                        readonly version: {
                                                            readonly type: "string";
                                                        };
                                                        readonly menuStyle: {
                                                            readonly type: "string";
                                                            readonly enum: readonly ["drilldown"];
                                                        };
                                                        readonly expanded: {
                                                            readonly type: "string";
                                                            readonly const: "always";
                                                        };
                                                        readonly selectFirstItemOnExpand: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly flatten: {
                                                            readonly type: "boolean";
                                                        };
                                                        readonly linkedSidebars: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "string";
                                                            };
                                                        };
                                                        readonly items: {
                                                            readonly type: "array";
                                                            readonly items: {
                                                                readonly type: "object";
                                                                readonly additionalProperties: true;
                                                            };
                                                        };
                                                    };
                                                };
                                            };
                                            readonly page: {
                                                readonly type: "string";
                                            };
                                            readonly directory: {
                                                readonly type: "string";
                                            };
                                            readonly disconnect: {
                                                readonly type: "boolean";
                                                readonly default: false;
                                            };
                                            readonly group: {
                                                readonly type: "string";
                                            };
                                            readonly label: {
                                                readonly type: "string";
                                            };
                                            readonly href: {
                                                readonly type: "string";
                                            };
                                            readonly external: {
                                                readonly type: "boolean";
                                            };
                                            readonly labelTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly groupTranslationKey: {
                                                readonly type: "string";
                                            };
                                            readonly icon: {
                                                readonly oneOf: readonly [{
                                                    readonly type: "string";
                                                }, {
                                                    readonly type: "object";
                                                    readonly properties: {
                                                        readonly srcSet: {
                                                            readonly type: "string";
                                                        };
                                                    };
                                                    readonly required: readonly ["srcSet"];
                                                }];
                                            };
                                            readonly separator: {
                                                readonly type: "string";
                                            };
                                            readonly separatorLine: {
                                                readonly type: "boolean";
                                            };
                                            readonly linePosition: {
                                                readonly type: "string";
                                                readonly enum: readonly ["top", "bottom"];
                                                readonly default: "top";
                                            };
                                            readonly version: {
                                                readonly type: "string";
                                            };
                                            readonly menuStyle: {
                                                readonly type: "string";
                                                readonly enum: readonly ["drilldown"];
                                            };
                                            readonly expanded: {
                                                readonly type: "string";
                                                readonly const: "always";
                                            };
                                            readonly selectFirstItemOnExpand: {
                                                readonly type: "boolean";
                                            };
                                            readonly flatten: {
                                                readonly type: "boolean";
                                            };
                                            readonly linkedSidebars: {
                                                readonly type: "array";
                                                readonly items: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly type: "object";
                                    };
                                };
                                readonly requiredPermission: {
                                    readonly type: "string";
                                };
                                readonly separateVersions: {
                                    readonly type: "boolean";
                                };
                                readonly title: {
                                    readonly type: "string";
                                };
                                readonly titleTranslationKey: {
                                    readonly type: "string";
                                };
                                readonly description: {
                                    readonly type: "string";
                                };
                                readonly descriptionTranslationKey: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
                readonly scorecard: {
                    readonly type: "object";
                    readonly additionalProperties: true;
                    readonly required: readonly [];
                    readonly properties: {
                        readonly ignoreNonCompliant: {
                            readonly type: "boolean";
                            readonly default: false;
                        };
                        readonly teamMetadataProperty: {
                            readonly type: "object";
                            readonly properties: {
                                readonly property: {
                                    readonly type: "string";
                                };
                                readonly label: {
                                    readonly type: "string";
                                };
                                readonly default: {
                                    readonly type: "string";
                                };
                            };
                        };
                        readonly levels: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["name"];
                                readonly properties: {
                                    readonly name: {
                                        readonly type: "string";
                                    };
                                    readonly color: {
                                        readonly type: "string";
                                    };
                                    readonly extends: {
                                        readonly type: "array";
                                        readonly items: {
                                            readonly type: "string";
                                        };
                                    };
                                    readonly rules: {
                                        readonly type: "object";
                                        readonly additionalProperties: {
                                            readonly oneOf: readonly [{
                                                readonly type: "string";
                                            }, {
                                                readonly type: "object";
                                            }];
                                        };
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                        readonly targets: {
                            readonly type: "array";
                            readonly items: {
                                readonly type: "object";
                                readonly required: readonly ["where"];
                                readonly properties: {
                                    readonly minimumLevel: {
                                        readonly type: "string";
                                    };
                                    readonly where: {
                                        readonly type: "object";
                                        readonly required: readonly ["metadata"];
                                        readonly properties: {
                                            readonly metadata: {
                                                readonly type: "object";
                                                readonly additionalProperties: {
                                                    readonly type: "string";
                                                };
                                            };
                                        };
                                        readonly additionalProperties: false;
                                    };
                                };
                                readonly additionalProperties: false;
                            };
                        };
                    };
                };
            };
            readonly additionalProperties: true;
            readonly default: {};
        };
        readonly reunite: {
            readonly type: "object";
            readonly properties: {
                readonly ignoreLinkChecker: {
                    readonly type: "boolean";
                };
            };
            readonly additionalProperties: false;
        };
        readonly plugins: {
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly default: {};
    readonly additionalProperties: false;
    readonly type: "object";
};
